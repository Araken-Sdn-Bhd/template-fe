var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
import { defineComponent, computed, resolveComponent, openBlock, createElementBlock, normalizeClass, createVNode, withCtx, renderSlot } from "vue";
import { e as extractComponentProps } from "../../utils/child-props.mjs";
import { o as omit_1 } from "../../../vendor.mjs";
import { u as useBem } from "../../composables/useBem.mjs";

import { u as useComponentPresetProp } from "../../composables/useComponentPreset.mjs";


import { V as VaConfig } from "../va-config/VaConfig.mjs";
import { V as VaButton } from "../va-button/index.mjs";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
var VaButtonGroup_vue_vue_type_style_index_0_lang = "";
const VaButtonProps = omit_1(extractComponentProps(VaButton), ["block"]);
const _sfc_main = defineComponent({
  name: "VaButtonGroup",
  components: { VaConfig },
  props: __spreadProps(__spreadValues(__spreadValues({}, VaButtonProps), useComponentPresetProp), {
    grow: {
      type: Boolean,
      default: false
    }
  }),
  setup: (props) => {
    const buttonConfig = computed(() => ({ VaButton: __spreadValues({}, props) }));
    const computedClass = useBem("va-button-group", () => ({
      square: !props.round,
      grow: props.grow,
      small: props.size === "small",
      large: props.size === "large"
    }));
    return { buttonConfig, computedClass };
  }
});
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  const _component_va_config = resolveComponent("va-config");
  return openBlock(), createElementBlock("div", {
    class: normalizeClass(["va-button-group", _ctx.computedClass])
  }, [
    createVNode(_component_va_config, { components: _ctx.buttonConfig }, {
      default: withCtx(() => [
        renderSlot(_ctx.$slots, "default")
      ]),
      _: 3
    }, 8, ["components"])
  ], 2);
}
var _VaButtonGroup = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaButtonGroup as _ };
//# sourceMappingURL=VaButtonGroup.mjs.map
