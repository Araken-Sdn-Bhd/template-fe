var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
import { defineComponent, ref, computed, watch, openBlock, createElementBlock, renderSlot, createCommentVNode, createElementVNode, normalizeStyle, withDirectives, vShow } from "vue";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.mjs";
import { _ as _export_sfc } from "../../../plugin-vue_export-helper.mjs";
var VaImage_vue_vue_type_style_index_0_lang = "";
const _sfc_main = defineComponent({
  name: "VaImage",
  emits: ["loaded", "error"],
  props: __spreadProps(__spreadValues({}, useComponentPresetProp), {
    ratio: { type: Number, default: 1 },
    contain: { type: Boolean, default: false },
    src: { type: String, required: true },
    alt: { type: String, default: "" },
    draggable: { type: Boolean, default: true }
  }),
  setup(props, { emit }) {
    const loading = ref(false);
    const loadingError = ref(false);
    const imageStyles = computed(() => ({
      objectFit: props.contain ? "contain" : "cover"
    }));
    const paddingStyles = computed(() => ({
      paddingBottom: `${1 / props.ratio * 100}%`
    }));
    const handleLoad = () => {
      loading.value = false;
      emit("loaded", props.src);
    };
    const handleError = (err) => {
      loadingError.value = true;
      loading.value = false;
      emit("error", err);
    };
    watch(() => props.src, () => {
      loading.value = true;
      loadingError.value = false;
    });
    return {
      loading,
      loadingError,
      imageStyles,
      paddingStyles,
      handleLoad,
      handleError
    };
  }
});
const _hoisted_1 = {
  class: "va-image",
  "aria-live": "polite"
};
const _hoisted_2 = {
  key: 0,
  class: "va-image__error"
};
const _hoisted_3 = { class: "va-image__img" };
const _hoisted_4 = ["src", "alt", "draggable"];
const _hoisted_5 = { class: "va-image__overlay" };
const _hoisted_6 = {
  key: 1,
  class: "va-image__loader"
};
function _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {
  return openBlock(), createElementBlock("div", _hoisted_1, [
    _ctx.loadingError ? (openBlock(), createElementBlock("div", _hoisted_2, [
      renderSlot(_ctx.$slots, "error")
    ])) : createCommentVNode("", true),
    createElementVNode("div", {
      style: normalizeStyle(_ctx.paddingStyles)
    }, null, 4),
    withDirectives(createElementVNode("div", _hoisted_3, [
      createElementVNode("img", {
        style: normalizeStyle(_ctx.imageStyles),
        src: _ctx.$props.src,
        alt: _ctx.$props.alt,
        draggable: _ctx.$props.draggable,
        onError: _cache[0] || (_cache[0] = (...args) => _ctx.handleError && _ctx.handleError(...args)),
        onLoad: _cache[1] || (_cache[1] = (...args) => _ctx.handleLoad && _ctx.handleLoad(...args))
      }, null, 44, _hoisted_4)
    ], 512), [
      [vShow, !_ctx.loadingError && !_ctx.loading]
    ]),
    createElementVNode("div", _hoisted_5, [
      renderSlot(_ctx.$slots, "default")
    ]),
    _ctx.loading ? (openBlock(), createElementBlock("div", _hoisted_6, [
      renderSlot(_ctx.$slots, "loader")
    ])) : createCommentVNode("", true)
  ]);
}
var _VaImage = /* @__PURE__ */ _export_sfc(_sfc_main, [["render", _sfc_render]]);
export { _VaImage as _ };
//# sourceMappingURL=VaImage.mjs.map
