var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
import { defineComponent, h } from "vue";

import { u as useColors } from "../../../composables/useColors.mjs";
import { u as useComponentPresetProp } from "../../../composables/useComponentPreset.mjs";


var VaTimelineSeparator_vue_vue_type_style_index_0_lang = "";
const componentName = "va-timeline-separator";
const _sfc_main = defineComponent({
  name: componentName,
  props: __spreadProps(__spreadValues({}, useComponentPresetProp), {
    color: { type: String, default: "primary" },
    vertical: { type: Boolean },
    active: { type: Boolean },
    activePrevious: { type: Boolean },
    activeNext: { type: Boolean }
  }),
  setup(props) {
    const { getColor } = useColors();
    return () => h("div", {
      class: {
        [componentName]: true,
        [`${componentName}--vertical`]: props.vertical
      }
    }, [
      h("div", {
        class: {
          [`${componentName}__line`]: true,
          [`${componentName}__line--active`]: props.activePrevious
        },
        style: {
          backgroundColor: getColor(props.activePrevious ? props.color : "divider")
        }
      }),
      h("div", {
        class: {
          [`${componentName}__center`]: true,
          [`${componentName}__center--active`]: props.active
        },
        style: {
          backgroundColor: getColor(props.active ? props.color : "divider")
        }
      }),
      h("div", {
        class: {
          [`${componentName}__line`]: true,
          [`${componentName}__line--active`]: props.activeNext
        },
        style: {
          backgroundColor: getColor(props.activeNext ? props.color : "divider")
        }
      })
    ]);
  }
});
export { _sfc_main as _ };
//# sourceMappingURL=VaTimelineSeparator.mjs.map
