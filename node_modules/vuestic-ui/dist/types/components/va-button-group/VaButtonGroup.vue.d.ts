declare const _default: import("vue").DefineComponent<{
    grow: {
        type: BooleanConstructor;
        default: boolean;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
    replace: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    type: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    target: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    tag: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    color: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    size: {
        type: import("vue").PropType<"small" | "medium" | "large">;
        required: true;
        default: "small" | "medium" | "large";
    };
    sizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        required: true;
        default: Record<string, any>;
    };
    fontSizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        required: true;
        default: Record<string, any>;
    };
    textColor: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    icon: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    borderColor: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    gradient: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    loading: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    disabled: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    textOpacity: {
        type: import("vue").PropType<number>;
        required: true;
        default: number;
    };
    backgroundOpacity: {
        type: import("vue").PropType<number>;
        required: true;
        default: number;
    };
    plain: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    round: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    iconRight: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    iconColor: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    to: {
        type: import("vue").PropType<string | Record<string, any>>;
        required: true;
        default: string | Record<string, any>;
    };
    append: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    exact: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    activeClass: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    exactActiveClass: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    href: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    pressedBehavior: {
        type: import("vue").PropType<"mask" | "opacity">;
        required: true;
        default: "mask" | "opacity";
    };
    pressedOpacity: {
        type: import("vue").PropType<number>;
        required: true;
        default: number;
    };
    pressedMaskColor: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    hoverBehavior: {
        type: import("vue").PropType<"mask" | "opacity">;
        required: true;
        default: "mask" | "opacity";
    };
    hoverOpacity: {
        type: import("vue").PropType<number>;
        required: true;
        default: number;
    };
    hoverMaskColor: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
}, {
    buttonConfig: import("vue").ComputedRef<{
        VaButton: {
            [x: string & `on${string}`]: ((...args: any[]) => any) | ((...args: unknown[]) => any) | undefined;
            replace: boolean;
            type: string;
            preset: string | undefined;
            target: string;
            tag: string;
            color: string;
            size: "small" | "medium" | "large";
            sizesConfig: Record<string, any>;
            fontSizesConfig: Record<string, any>;
            textColor: string;
            icon: string;
            borderColor: string;
            gradient: boolean;
            loading: boolean;
            disabled: boolean;
            textOpacity: number;
            backgroundOpacity: number;
            plain: boolean;
            round: boolean;
            iconRight: string;
            iconColor: string;
            to: string | Record<string, any>;
            append: boolean;
            exact: boolean;
            activeClass: string;
            exactActiveClass: string;
            href: string;
            pressedBehavior: "mask" | "opacity";
            pressedOpacity: number;
            pressedMaskColor: string;
            hoverBehavior: "mask" | "opacity";
            hoverOpacity: number;
            hoverMaskColor: string;
            grow: boolean;
        };
    }>;
    computedClass: {
        [x: `va-button-group--${string}`]: boolean;
    } & {
        readonly asObject: import("vue").ComputedRef<{
            [x: `va-button-group--${string}`]: boolean;
        }>;
        readonly asArray: import("vue").ComputedRef<`va-button-group--${string}`[]>;
        readonly asString: import("vue").ComputedRef<string>;
    };
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    grow: {
        type: BooleanConstructor;
        default: boolean;
    };
    preset: {
        type: StringConstructor;
        default: undefined;
    };
    replace: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    type: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    target: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    tag: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    color: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    size: {
        type: import("vue").PropType<"small" | "medium" | "large">;
        required: true;
        default: "small" | "medium" | "large";
    };
    sizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        required: true;
        default: Record<string, any>;
    };
    fontSizesConfig: {
        type: import("vue").PropType<Record<string, any>>;
        required: true;
        default: Record<string, any>;
    };
    textColor: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    icon: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    borderColor: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    gradient: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    loading: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    disabled: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    textOpacity: {
        type: import("vue").PropType<number>;
        required: true;
        default: number;
    };
    backgroundOpacity: {
        type: import("vue").PropType<number>;
        required: true;
        default: number;
    };
    plain: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    round: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    iconRight: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    iconColor: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    to: {
        type: import("vue").PropType<string | Record<string, any>>;
        required: true;
        default: string | Record<string, any>;
    };
    append: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    exact: {
        type: import("vue").PropType<boolean>;
        required: true;
        default: boolean;
    };
    activeClass: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    exactActiveClass: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    href: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    pressedBehavior: {
        type: import("vue").PropType<"mask" | "opacity">;
        required: true;
        default: "mask" | "opacity";
    };
    pressedOpacity: {
        type: import("vue").PropType<number>;
        required: true;
        default: number;
    };
    pressedMaskColor: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
    hoverBehavior: {
        type: import("vue").PropType<"mask" | "opacity">;
        required: true;
        default: "mask" | "opacity";
    };
    hoverOpacity: {
        type: import("vue").PropType<number>;
        required: true;
        default: number;
    };
    hoverMaskColor: {
        type: import("vue").PropType<string>;
        required: true;
        default: string;
    };
}>>, {
    replace: boolean;
    type: string;
    preset: string;
    target: string;
    tag: string;
    color: string;
    size: "small" | "medium" | "large";
    sizesConfig: Record<string, any>;
    fontSizesConfig: Record<string, any>;
    textColor: string;
    icon: string;
    borderColor: string;
    gradient: boolean;
    loading: boolean;
    disabled: boolean;
    textOpacity: number;
    backgroundOpacity: number;
    plain: boolean;
    round: boolean;
    iconRight: string;
    iconColor: string;
    to: string | Record<string, any>;
    append: boolean;
    exact: boolean;
    activeClass: string;
    exactActiveClass: string;
    href: string;
    pressedBehavior: "mask" | "opacity";
    pressedOpacity: number;
    pressedMaskColor: string;
    hoverBehavior: "mask" | "opacity";
    hoverOpacity: number;
    hoverMaskColor: string;
    grow: boolean;
}>;
export default _default;
