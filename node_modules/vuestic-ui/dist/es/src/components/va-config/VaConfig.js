var __defProp = Object.defineProperty;
var __defProps = Object.defineProperties;
var __getOwnPropDescs = Object.getOwnPropertyDescriptors;
var __getOwnPropSymbols = Object.getOwnPropertySymbols;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __propIsEnum = Object.prototype.propertyIsEnumerable;
var __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;
var __spreadValues = (a, b) => {
  for (var prop in b || (b = {}))
    if (__hasOwnProp.call(b, prop))
      __defNormalProp(a, prop, b[prop]);
  if (__getOwnPropSymbols)
    for (var prop of __getOwnPropSymbols(b)) {
      if (__propIsEnum.call(b, prop))
        __defNormalProp(a, prop, b[prop]);
    }
  return a;
};
var __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));
import { computed, defineComponent, toRefs, inject, provide } from "vue";
import { u as useComponentPresetProp } from "../../composables/useComponentPreset.js";
const LocalConfigKey = Symbol("LocalConfigKey");
const CONFIGS_DEFAULT = computed(() => []);
function useLocalConfig() {
  return inject(LocalConfigKey, CONFIGS_DEFAULT);
}
var VaConfig = defineComponent({
  name: "VaConfig",
  props: __spreadProps(__spreadValues({}, useComponentPresetProp), {
    components: { type: Object, default: () => ({}) }
  }),
  setup(props) {
    const { components } = toRefs(props);
    const prevChain = useLocalConfig();
    const nextChain = computed(() => [...prevChain.value, components.value]);
    provide(LocalConfigKey, nextChain);
    return {};
  },
  render() {
    return this.$slots.default ? this.$slots.default() : null;
  }
});
export { VaConfig as V, useLocalConfig as u };
//# sourceMappingURL=VaConfig.js.map
