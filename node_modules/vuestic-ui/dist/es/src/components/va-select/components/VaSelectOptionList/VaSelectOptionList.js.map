{"version":3,"file":"VaSelectOptionList.js","sources":["../../../../../../../src/components/va-select/components/VaSelectOptionList/VaSelectOptionList.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"root\"\n    class=\"va-select-option-list\"\n    :tabindex=\"tabindex\"\n    @keydown.up.stop.prevent=\"focusPreviousOption\"\n    @keydown.left.stop.prevent=\"focusPreviousOption\"\n    @keydown.down.stop.prevent=\"focusNextOption\"\n    @keydown.right.stop.prevent=\"focusNextOption\"\n    @scroll.passive=\"onScroll\"\n  >\n    <template\n      v-for=\"(options, groupName) in optionGroups\"\n      :key=\"groupName\"\n    >\n      <span\n        v-if=\"groupName !== '_noGroup'\"\n        class=\"va-select-option-list__group-name\"\n      >\n        {{ groupName }}\n      </span>\n      <va-virtual-scroller\n        v-if=\"$props.virtualScroller\"\n        ref=\"virtualScrollerRef\"\n        :items=\"options\"\n        :track-by=\"$props.getTrackBy\"\n        :wrapper-size=\"rootHeight\"\n        @scroll:bottom=\"handleScrollToBottom\"\n        v-slot=\"{ item: option, index }\"\n      >\n        <va-select-option\n          v-if=\"!isSlotContentPassed\"\n          :option=\"option\"\n          :current-option=\"currentOptionComputed\"\n          v-bind=\"selectOptionProps\"\n          @click=\"selectOption(option)\"\n          @mousemove=\"updateHoveredOption(option)\"\n        />\n        <template v-else>\n          <slot v-bind=\"{ option, index, selectOption }\" />\n        </template>\n      </va-virtual-scroller>\n\n      <template v-else>\n        <template v-for=\"(option, index) in options\" :key=\"$props.getTrackBy(option)\">\n          <va-select-option\n            v-if=\"!isSlotContentPassed\"\n            :ref=\"setItemRef($props.getTrackBy(option))\"\n            :current-option=\"currentOptionComputed\"\n            :option=\"option\"\n            v-bind=\"selectOptionProps\"\n            @click=\"selectOption(option)\"\n            @mousemove=\"updateHoveredOption(option)\"\n          />\n          <template v-else>\n            <slot v-bind=\"{ option, index, selectOption }\" />\n          </template>\n        </template>\n      </template>\n    </template>\n    <div\n      v-if=\"!filteredOptions.length\"\n      class=\"va-select-option-list--empty\"\n    >\n      {{ noOptionsText }}\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, ref, shallowRef, watch, computed } from 'vue'\nimport pick from 'lodash/pick.js'\n\nimport { useComponentPresetProp, useColorProps, extractHTMLElement, useObjectRefs } from '../../../../composables'\n\nimport { scrollToElement } from '../../../../utils/scroll-to-element'\nimport { checkSlotChildrenDeep } from '../../../../services/utils'\n\nimport { VaVirtualScroller } from '../../../va-virtual-scroller'\nimport { VaSelectOption } from '../VaSelectOption'\n\nimport type { SelectOption, EventSource } from '../../types'\n\nexport default defineComponent({\n  name: 'VaSelectOptionList',\n  components: { VaVirtualScroller, VaSelectOption },\n  emits: [\n    'select-option',\n    'update:hoveredOption',\n    'no-previous-option-to-hover',\n    'scroll-bottom',\n  ],\n  props: {\n    ...useColorProps,\n    ...useComponentPresetProp,\n    options: { type: Array as PropType<SelectOption[]>, default: () => [] },\n    noOptionsText: { type: String, default: 'Items not found' },\n    getSelectedState: { type: Function as PropType<(option: SelectOption) => boolean>, required: true },\n    getText: { type: Function as PropType<(option: SelectOption) => string>, required: true },\n    getTrackBy: { type: Function as PropType<(option: SelectOption) => number>, required: true },\n    getGroupBy: { type: Function as PropType<(option: SelectOption) => string>, required: true },\n    multiple: { type: Boolean, default: false },\n    search: { type: String, default: '' },\n    tabindex: { type: Number, default: 0 },\n    hoveredOption: { type: [String, Number, Object] as PropType<SelectOption | null>, default: null },\n    virtualScroller: { type: Boolean, default: true },\n  },\n\n  setup (props, { emit, slots }) {\n    const root = shallowRef<HTMLElement>()\n    const focus = () => {\n      // Prevent scroll since element in dropdown and it causes scrolling to page end.\n      root.value?.focus({ preventScroll: true })\n    }\n    const rootHeight = computed(() => root.value?.clientHeight ?? 200)\n\n    const handleScrollToBottom = () => emit('scroll-bottom')\n    const onScroll = (event: UIEvent) => {\n      const target = event.target as Element\n      if (!target) { return }\n\n      if (target.scrollTop + target.clientHeight === target.scrollHeight) {\n        handleScrollToBottom()\n      }\n    }\n\n    const lastInteractionSource = ref<EventSource>('')\n    const currentOptionComputed = computed(() => props.hoveredOption || null)\n    const updateCurrentOption = (option: SelectOption | null, source: EventSource) => {\n      emit('update:hoveredOption', option)\n      lastInteractionSource.value = source\n    }\n\n    const filteredOptions = computed(() => {\n      if (!props.search) { return props.options }\n\n      return props.options.filter((option: SelectOption) => {\n        const optionText = props.getText(option).toString().toUpperCase()\n        const search = props.search.toUpperCase()\n        return optionText.includes(search)\n      })\n    })\n\n    const optionGroups = computed(() => filteredOptions.value\n      .reduce((groups: Record<string, SelectOption[]>, option) => {\n        if (typeof option !== 'object' || !props.getGroupBy(option)) {\n          groups._noGroup.push(option)\n        } else {\n          const groupBy = props.getGroupBy(option)\n\n          if (!groups[groupBy]) { groups[groupBy] = [] }\n\n          groups[groupBy].push(option)\n        }\n\n        return groups\n      }, { _noGroup: [] }))\n\n    const updateHoveredOption = (option?: SelectOption) => {\n      if (option === currentOptionComputed.value) { return }\n\n      updateCurrentOption(option || null, 'mouse')\n    }\n    const updateFocusedOption = (option?: SelectOption) => { updateCurrentOption(option || null, 'keyboard') }\n\n    const selectOption = (option: SelectOption) => emit('select-option', option)\n\n    const currentOptionIndex = computed(() => filteredOptions.value.findIndex((option) => {\n      return !!currentOptionComputed.value && props.getTrackBy(option) === props.getTrackBy(currentOptionComputed.value)\n    }))\n\n    const selectOptionProps = computed(\n      () => pick(props, ['getSelectedState', 'getText', 'getTrackBy', 'color']),\n    )\n\n    const isSlotContentPassed = computed(() => checkSlotChildrenDeep(slots.default))\n\n    // public\n    const focusPreviousOption = () => {\n      if (!currentOptionComputed.value) {\n        // Hover last option from list\n        filteredOptions.value.length && updateFocusedOption(filteredOptions.value.at(-1))\n        return\n      }\n\n      if (filteredOptions.value[currentOptionIndex.value - 1]) {\n        updateFocusedOption(filteredOptions.value[currentOptionIndex.value - 1])\n      } else {\n        emit('no-previous-option-to-hover')\n      }\n    }\n\n    const focusNextOption = () => {\n      if (!currentOptionComputed.value) {\n        // Hover first option from list\n        filteredOptions.value.length && updateFocusedOption(filteredOptions.value[0])\n        return\n      }\n\n      if (filteredOptions.value[currentOptionIndex.value + 1]) {\n        updateFocusedOption(filteredOptions.value[currentOptionIndex.value + 1])\n      }\n    }\n\n    const focusFirstOption = () => updateFocusedOption(filteredOptions.value?.[0])\n\n    const { itemRefs, setItemRef } = useObjectRefs()\n    const virtualScrollerRef = shallowRef<Array<InstanceType<typeof VaVirtualScroller>>>()\n    const scrollToOption = (option: SelectOption) => {\n      if (!option) { return }\n\n      const element = itemRefs.value[props.getTrackBy(option)]\n      if (element) { scrollToElement(extractHTMLElement(element)) }\n\n      if (props.virtualScroller) { virtualScrollerRef.value?.[0].virtualScrollTo(currentOptionIndex.value) }\n    }\n\n    const publicMethods = {\n      focusPreviousOption,\n      focusNextOption,\n      focusFirstOption,\n      scrollToOption,\n      focus,\n    }\n\n    watch(() => props.hoveredOption, (newOption: SelectOption | null) => {\n      (!lastInteractionSource.value || lastInteractionSource.value === 'keyboard') && newOption && scrollToOption(newOption)\n    })\n\n    return {\n      root,\n      virtualScrollerRef,\n\n      rootHeight,\n      optionGroups,\n      filteredOptions,\n      selectOptionProps,\n      isSlotContentPassed,\n      currentOptionComputed,\n\n      onScroll,\n      setItemRef,\n      selectOption,\n      updateHoveredOption,\n      handleScrollToBottom,\n\n      ...publicMethods,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../../../styles/resources\";\n@import \"variables\";\n\n.va-select-option-list {\n  overflow: auto;\n  width: var(--va-select-option-list-width);\n  max-height: var(--va-select-option-list-max-height);\n  display: flex;\n  flex-direction: column;\n  font-family: var(--va-font-family);\n\n  &--empty {\n    padding: var(--va-select-option-list-empty-block-padding);\n  }\n\n  @include va-scroll(var(--va-primary));\n\n  &__group-name {\n    padding: var(--va-select-option-list-group-name-padding);\n    font-size: var(--va-select-option-list-group-name-font-size);\n    color: var(--va-select-option-list-group-name-color);\n    font-weight: var(--va-select-option-list-group-name-font-weight);\n    text-transform: var(--va-select-option-list-group-name-text-transform);\n  }\n}\n</style>\n"],"names":["pick","_createElementBlock","_withKeys","_withModifiers","_openBlock","_Fragment","_renderList","_toDisplayString","_createCommentVNode","_createBlock","_mergeProps","_renderSlot","_normalizeProps"],"mappings":"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"}