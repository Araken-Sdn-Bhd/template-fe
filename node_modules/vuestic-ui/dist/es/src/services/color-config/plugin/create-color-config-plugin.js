import { watch } from "vue";
import { i as isServer } from "../../../utils/ssr-utils.js";
import { c as cssVariableName } from "../utils.js";

import { u as useColors } from "../../../composables/useColors.js";


const setCSSVariable = (name, value, root) => {
  root.style.setProperty(cssVariableName(name), value);
};
const createColorConfigPlugin = (app) => {
  const { colors, getTextColor: getTextColor2, getColor } = useColors();
  const renderCSSVariables = (colors2) => {
    if (!colors2) {
      return;
    }
    const colorNames = Object.keys(colors2);
    return colorNames.map((key) => `${cssVariableName(key)}: ${colors2[key]}`).join(";");
  };
  const updateColors = (newValue) => {
    if (!newValue) {
      return;
    }
    if (isServer()) {
      return;
    }
    const root = document.documentElement;
    const colorNames = Object.keys(newValue);
    colorNames.forEach((key) => {
      setCSSVariable(key, newValue[key], root);
    });
    colorNames.forEach((key) => {
      setCSSVariable(`on-${key}`, getColor(getTextColor2(newValue[key])), root);
    });
  };
  updateColors(colors);
  watch(colors, (newValue) => {
    updateColors(newValue);
  }, { immediate: true, deep: true });
  return {
    renderCSSVariables,
    updateColors
  };
};
export { createColorConfigPlugin as c };
//# sourceMappingURL=create-color-config-plugin.js.map
